// Generated by CoffeeScript 1.4.0
(function() {
  var SR_Helper, SR_User_Controller, SR_User_Model,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  SR_Helper = (function() {
    var $;

    $ = jQuery;

    function SR_Helper() {
      this.start_debugger();
    }

    SR_Helper.prototype.start_debugger = function() {
      if (this.check_parameter_exists('sr_debug')) {
        this.debug_mode = true;
        return console.log("***********************************************\n* Welcome to the Social Reader debug console! *\n***********************************************");
      } else {
        return this.debug_mode = false;
      }
    };

    SR_Helper.prototype.debug = function(message, indent) {
      if (indent == null) {
        indent = 1;
      }
      if (this.debug_mode === true) {
        if (indent === 1) {
          return console.log("  * " + message);
        } else if (indent === 0) {
          return console.log("\n" + message + ":");
        }
      } else {

      }
    };

    SR_Helper.prototype.check_parameter_exists = function(parameter) {
      var currentParameter, fullQString, i, paramArray, paramCount, queryStringComplete;
      fullQString = window.location.search.substring(1);
      paramCount = 0;
      queryStringComplete = "?";
      if (fullQString.length > 0) {
        paramArray = fullQString.split("&");
        i = 0;
        while (i < paramArray.length) {
          currentParameter = paramArray[i].split("=");
          if (currentParameter[0] === parameter) {
            return true;
          }
          i++;
        }
      }
      return false;
    };

    SR_Helper.prototype.set_cookie = function(c_name, value, exdays) {
      var c_value, exdate;
      exdate = new Date();
      exdate.setDate(exdate.getDate() + exdays);
      c_value = escape(value) + (!(exdays != null) ? "" : "; expires=" + exdate.toUTCString());
      return document.cookie = c_name + "=" + c_value;
    };

    SR_Helper.prototype.get_cookie = function(c_name) {
      var ARRcookies, i, x, y;
      ARRcookies = document.cookie.split(";");
      i = 0;
      while (i < ARRcookies.length) {
        x = ARRcookies[i].substr(0, ARRcookies[i].indexOf("="));
        y = ARRcookies[i].substr(ARRcookies[i].indexOf("=") + 1);
        x = x.replace(/^\s+|\s+$/g, "");
        if (x === c_name) {
          return unescape(y);
        }
        i++;
      }
    };

    SR_Helper.prototype.check_cookie = function(c_name) {
      var cookie;
      cookie = this.get_cookie(c_name);
      if ((cookie != null) && cookie !== "") {
        return true;
      } else {
        return false;
      }
    };

    SR_Helper.prototype.remove_cookie = function(c_name) {
      return document.cookie = c_name + "=; expires=Thu, 01 Jan 1970 00:00:01 GMT;";
    };

    return SR_Helper;

  })();

  SR_User_Model = (function() {
    var $;

    $ = jQuery;

    function SR_User_Model(cb) {
      this.fb_get_friend_users = __bind(this.fb_get_friend_users, this);

      this.init_fb = __bind(this.init_fb, this);

      var _this = this;
      this.helper = new SR_Helper;
      this.params = {
        site: {},
        user: {},
        friends: []
      };
      this.get_client_details(function() {
        _this.helper.debug('Finished');
        return _this.init_fb(function() {
          return cb();
        });
      });
    }

    SR_User_Model.prototype.get_client_details = function(cb) {
      var _this = this;
      this.helper.debug('Getting client site details', 0);
      if (this.helper.check_cookie('sr_site')) {
        this.helper.debug('sr_site cookie exists, read details');
        this.params.site = JSON.parse(this.helper.get_cookie('sr_site'));
        if (this.params.site.fb_app_id) {
          this.helper.debug('Read from sr_site cookie: SUCCESS');
        } else {
          this.helper.debug('Read from sr_site cookie: FAILURE');
        }
        return cb();
      } else {
        this.helper.debug('sr_site cookie does not exist, get details from server via ajax');
        return $.post(_sr_ajax.ajaxurl, {
          action: "_sr_ajax_hook",
          type: "get_client_details"
        }, function(data) {
          _this.helper.debug('Ajax request successful');
          _this.params.site = JSON.parse(data);
          if (_this.params.site) {
            _this.helper.debug('Read from ajax request data: SUCCESS');
          } else {
            _this.helper.debug('Read from ajax request data: FAILURE');
          }
          if (_this.helper.set_cookie('sr_site', JSON.stringify(_this.params.site), 1)) {
            _this.helper.debug('Setting site session cookie: SUCCESS');
          } else {
            _this.helper.debug('Setting site session cookie: FAILURE');
          }
          return cb();
        });
      }
    };

    SR_User_Model.prototype.init_fb = function(cb) {
      var _this = this;
      this.helper.debug('Initiliazing Facebook', 0);
      $('body').prepend('<div id="fb-root"></div>');
      this.helper.debug('Prepended div fb-root to body');
      window.fbAsyncInit = function() {
        _this.helper.debug('Loading the SDK asynchronously');
        FB.init({
          appId: "" + _this.params.site.fb_app_id,
          channelUrl: "//localhost:8888/wordpress/channel.html",
          status: true,
          cookie: true,
          xfbml: true
        });
        _this.helper.debug('SDK loaded');
        _this.helper.debug('Finished');
        return _this.fb_is_logged_in(function() {
          return _this.fb_get_user(function() {
            return _this.fb_get_friend_users(function() {
              return cb();
            });
          });
        });
      };
      return (function(d, debug) {
        var id, js, ref;
        js = void 0;
        id = "facebook-jssdk";
        ref = d.getElementsByTagName("script")[0];
        if (d.getElementById(id)) {
          return;
        }
        js = d.createElement("script");
        js.id = id;
        js.async = true;
        js.src = "//connect.facebook.net/en_US/all" + (debug ? "/debug" : "") + ".js";
        return ref.parentNode.insertBefore(js, ref);
      })(window.document, false);
    };

    SR_User_Model.prototype.fb_is_logged_in = function(cb) {
      var _this = this;
      this.helper.debug('See if user is logged in', 0);
      if (this.helper.check_cookie('sr_user')) {
        this.helper.debug('User cookie is set, assume logged in');
        this.helper.debug('Finished');
        return cb();
      } else {
        this.helper.debug('User cookie is not set, query Facebook');
        return FB.getLoginStatus(function(response) {
          _this.helper.debug('Response from Facebook received');
          if (response.status === 'connected') {
            _this.helper.debug('User is logged in');
            _this.params.user.logged_in = true;
            _this.helper.debug('Finished');
            return cb();
          } else {
            _this.helper.debug('User is not logged in');
            _this.params.user.logged_in = false;
            _this.helper.debug('Finished');
            return cb();
          }
        });
      }
    };

    SR_User_Model.prototype.fb_get_user = function(cb) {
      var _this = this;
      this.helper.debug('Get Facebook user', 0);
      if (this.helper.check_cookie('sr_user')) {
        this.helper.debug('User cookie is set, read from that');
        this.params.user = JSON.parse(this.helper.get_cookie('sr_user'));
        if (this.params.user.id) {
          this.helper.debug('Read from sr_user cookie: SUCCESS');
          this.helper.debug('Finished');
          cb();
          return;
        } else {
          this.helper.debug('Read from cookie error, query Facebook again');
        }
      }
      this.helper.debug('Querying Facebook');
      return FB.api('/me', function(me) {
        _this.helper.debug('Response received, setting values');
        _this.params.user.id = me.id;
        _this.params.user.name = me.name;
        _this.params.user.link = me.link;
        _this.params.user.picture = "//graph.facebook.com/" + me.id + "/picture";
        _this.params.user.auto_sharing = _this.is_auto_sharing();
        _this.helper.debug('Setting cookie');
        _this.helper.set_cookie('sr_user', JSON.stringify(_this.params.user), 1);
        _this.helper.debug('Finished');
        return cb();
      });
    };

    SR_User_Model.prototype.fb_get_friend_users = function(cb) {
      var _this = this;
      this.helper.debug('Get Facebook friends using the app', 0);
      if (this.helper.check_cookie('sr_friends')) {
        this.helper.debug('Friends cookie is set, read from that');
        this.params.friends = JSON.parse(this.helper.get_cookie('sr_friends'));
        if (this.params.friends.count !== "undefined") {
          this.helper.debug('Read friends from cookie: SUCCESS');
          this.helper.debug('Finished');
          cb();
          return;
        } else {
          this.helper.debug('Read from cookie error, query Facebook again');
        }
      }
      this.helper.debug('Querying Facebook');
      return FB.api('/me/friends?fields=name,installed', function(response) {
        var friend, _i, _len;
        _this.helper.debug('Response received, finding friend users');
        for (_i = 0, _len = response.length; _i < _len; _i++) {
          friend = response[_i];
          if (friend.installed === true) {
            delete friend.installed;
            _this.params.friends.push(friend);
          }
        }
        _this.helper.debug("" + _this.params.friends.length + " friends found");
        _this.helper.debug('Setting cookie');
        _this.helper.set_cookie('sr_friends', JSON.stringify(_this.params.user), 1);
        _this.helper.debug('Finished');
        return cb();
      });
    };

    SR_User_Model.prototype.add_read = function(cb) {
      var _this = this;
      this.helper.debug('Adding user read', 0);
      return FB.api("/me/news.reads?article=" + document.URL, "post", function(response) {
        _this.helper.debug('Response received from Facebook');
        if (response.id) {
          _this.helper.debug("Read " + response.id + " posted to Facebook: SUCCESS");
        } else {
          _this.helper.debug("Read posted to Facebook: FAILURE");
          _this.helper.debug("Error message from Facebook: " + response.error.message + " ");
        }
        _this.helper.debug('Finished');
        if (cb != null) {
          return cb();
        }
      });
    };

    SR_User_Model.prototype.delete_read = function(cb) {
      var _this = this;
      this.helper.debug('Deleting user read', 0);
      return FB.api("/" + id, "delete", function(response) {
        _this.helper.debug('Response received from Facebook');
        if (response === true) {
          _this.helper.debug('Read deleted from Facebook: SUCCESS');
        } else {
          _this.helper.debug('Read deleted from Facebook: FAILURE');
          _this.helper.debug('Error message from Facebook: #{response.error.message}');
        }
        return cb();
      });
    };

    SR_User_Model.prototype.set_auto_sharing = function(bool) {
      this.helper.debug('Setting auto sharing', 0);
      this.helper.debug("Changing auto sharing to " + bool);
      this.params.user.auto_sharing = bool;
      this.helper.set_cookie('sr_auto_sharing', bool, 30);
      if (this.is_auto_sharing() === bool) {
        this.helper.debug('Cookie set: SUCCESS');
        this.helper.debug('Finished');
        return true;
      } else {
        this.helper.debug('Cookie set: FAILURE');
        this.helper.debug('Finished');
        return false;
      }
    };

    SR_User_Model.prototype.is_auto_sharing = function() {
      this.helper.debug("See if we're auto sharing");
      if (this.helper.check_cookie('sr_auto_sharing') === false) {
        this.helper.debug("No cookie set, assume we are auto-sharing");
        return true;
      } else {
        this.helper.debug("Cookie is set");
        if (this.helper.get_cookie('sr_auto_sharing') === 'true') {
          this.helper.debug("Cookie auto sharing set to true");
          return true;
        } else {
          this.helper.debug("Cookie auto sharing set to false");
          return false;
        }
      }
    };

    return SR_User_Model;

  })();

  SR_User_Controller = (function() {
    var $;

    $ = jQuery;

    function SR_User_Controller(cb) {
      var _this = this;
      this.User = new SR_User_Model(function() {
        _this.helper = _this.User.helper;
        return cb();
      });
    }

    SR_User_Controller.prototype.load_sidebar = function() {
      var toggled_class,
        _this = this;
      _this = this;
      this.helper.debug("Loading the sidebar", 0);
      if (window._sr.User.params.user.logged_in === true) {
        this.helper.debug("User is logged in");
        if (this.User.params.user.auto_sharing === true) {
          toggled_class = 'sr_sidebar_toggled_on';
        } else {
          toggled_class = 'sr_sidebar_toggled_off';
        }
        this.helper.debug("User auto-sharing is set to: " + this.User.params.user.auto_sharing);
        this.helper.debug('Putting html');
        $('#sr_sidebar_box').html("				<div id='sr_sidebar_logged_in'>								<a target='blank' href='" + this.User.params.user.url + "'>						<img src='" + this.User.params.user.picture + "' width='50' height='50' alt='" + this.User.params.user.name + "' />					</a>					<div class='sr_sidebar_right'>						<div class='sr_sidebar_name'><a target='blank' href='" + this.User.params.user.url + "'>" + this.User.params.user.name + "</a></div>						<div class='sr_sidebar_promo'>" + this.User.params.site.login_meta + "</div>						<div class='sr_sidebar_logout'><a href='#'>Logout</a></div>					</div>					<div class='clear'></div>					<div class='sr_sidebar_bottom'>						<div class='sr_sidebar_toggle " + toggled_class + "'>							<a title='Auto sharing to Facebook is enabled'>" + this.User.params.site.auto_sharing_on + "</a> 						</div>						<div id='sr_sidebar_activity'><a>" + this.User.params.site.activity + "</a></div>					</div>				</div>			");
        if ($('#sr_sidebar_box').html() !== '') {
          this.helper.debug("Html put: SUCCESS");
        } else {
          this.helper.debug("Html put: FAILURE");
        }
        this.helper.debug("Setup jQuery listener for toggle auto-sharing link click");
        $("#sr_sidebar_box .sr_sidebar_toggle").on("click", function() {
          if ($(this).attr('class').match(/sr_sidebar_toggled_on/)) {
            $(this).removeClass('sr_sidebar_toggled_on');
            $(this).addClass('sr_sidebar_toggled_off');
            return _this.User.set_auto_sharing(false);
          } else if ($(this).attr('class').match(/sr_sidebar_toggled_off/)) {
            $(this).removeClass('sr_sidebar_toggled_off');
            $(this).addClass('sr_sidebar_toggled_on');
            return _this.User.set_auto_sharing(true);
          }
        });
        this.helper.debug("Setup jQuery listener activity link click");
        $("#sr_sidebar_box #sr_sidebar_activity").on("click", function() {
          return _this.show_activity();
        });
        return this.helper.debug('Finished');
      } else {

      }
    };

    SR_User_Controller.prototype.load_lightbox = function() {
      var _this = this;
      this.helper.debug('Loading the lightbox', 0);
      if (window._sr.User.params.user.logged_in === false) {
        this.helper.debug("User is not logged in, don't load it");
        this.helper.debug('Finished');
        return false;
      }
      this.helper.debug('Prepending lightbox to <body>');
      $('<div/>', {
        id: 'sr_lightbox',
        html: "<div id='sr_lightbox_inner'></div>"
      }).prependTo('body');
      if ($('#sr_lightbox_inner').length !== 0) {
        this.helper.debug("Lightbox added: SUCCESS");
      } else {
        this.helper.debug("Lightbox added: FAILURE");
      }
      this.helper.debug('Setup jQuery listener for close lightbox link click');
      $('a#sr_close_lightbox').live('click', function() {
        return _this.close_lightbox();
      });
      return this.helper.debug('Finished');
    };

    SR_User_Controller.prototype.close_lightbox = function() {
      return $('#sr_lightbox').fadeOut(function() {
        return $('#sr_lightbox #sr_lightbox_inner').html('');
      });
    };

    SR_User_Controller.prototype.show_activity = function() {
      var _this = this;
      this.helper.debug('Show user activity', 0);
      this.helper.debug('Fading in lightbox');
      return $('#sr_lightbox').fadeIn('fast', function() {
        _this.helper.debug('Fade finished, setting html');
        return $('#sr_lightbox_inner').html("				<h3>Your activity</h3>				<a id='sr_close_lightbox'>Close</a>			");
      });
    };

    return SR_User_Controller;

  })();

  jQuery(document).ready(function() {
    var _this = this;
    return window._sr = new SR_User_Controller(function() {
      window._sr.load_sidebar();
      return window._sr.load_lightbox();
    });
  });

}).call(this);
